{"version":3,"sources":["utils/constants.js","apis/config.js","apis/auth.js","pages/other/FormikLogin.js","pages/other/LoginRegister.js"],"names":["ACCESS_TOKEN","REFRESH_TOKEN","baseURL","headers","loginAPI","data","URL","axios","post","then","response","result","registerAPI","LogInSchema","Yup","shape","email","required","password","loginUser","values","a","console","log","status","Swal","mixin","toast","position","showConfirmButton","timer","fire","icon","title","message","accessToken","refreshToken","localStorage","setItem","Login","initialValues","validationSchema","onSubmit","errors","touched","className","name","type","msg","href","LoginRegister","location","content","LayoutOne","headerTop","Breadcrumb"],"mappings":"yIAAA,oEAAO,IAAMA,EAAe,cACfC,EAAgB,gB,iCCAtB,IAAMC,EAAU,4CACVC,EAAU,CAAC,KAAO,UAAW,QAAW,CAAC,8BAA8B,M,kBCE7E,SAASC,EAAUC,GACtB,IAAMC,EAAG,UAAMJ,EAAN,eACT,OAAOK,IAAMC,KAAKF,EAAK,CAACD,QAAOF,GAC9BM,MAAK,SAACC,GAEH,OAAOA,KAEVD,MAAK,SAACE,GAEH,OAAOA,KAMR,SAASC,EAAaP,GACzB,IAAMC,EAAG,UAAMJ,EAAN,cACT,OAAOK,IAAMC,KAAKF,EAAK,CAACD,QAAOF,GAC9BM,MAAK,SAACC,GAEH,OAAOA,KAEVD,MAAK,SAACE,GAEH,OAAOA,KA5Bf,qE,0LCSME,EAAcC,MAAaC,MAAM,CACrCC,MAAOF,MAAaE,MAAM,qBAAkBC,SAAS,mBACrDC,SAAUJ,MAAaG,SAAS,6BAG5BE,EAAS,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,sEACKjB,YAASgB,GADd,OACVT,EADU,OAEhBW,QAAQC,IAAIZ,GAEc,MAAvBA,EAAON,KAAKmB,OACCC,IAAKC,MAAM,CACvBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,MAGHC,KAAK,CACTC,KAAM,QACNC,MAAO,wBAEsB,MAAvBtB,EAAON,KAAKmB,QACNC,IAAKC,MAAM,CACvBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,MAGHC,KAAK,CACTC,KAAM,QACNC,MAAO,6BAIRtB,EAAOuB,QACRZ,QAAQC,IAAI,UACR,EACgCZ,EAAON,KAApC8B,EADJ,EACIA,YAAaC,EADjB,EACiBA,aACpBC,aAAaC,QAAQtC,IAAcmC,GACnCE,aAAaC,QAAQrC,IAAemC,IAnCtB,2CAAH,sDAkFAG,EA3CD,kBACZ,6BACE,kBAAC,IAAD,CACEC,cAAe,CAAExB,MAAO,GAAIE,SAAU,IACtCuB,iBAAkB5B,EAClB6B,SAAU,SAACtB,GACTE,QAAQC,IAAIH,GACZD,EAAUC,MAGX,cAAGA,OAAH,EAAWuB,OAAX,EAAmBC,QAAnB,OACC,yBAAKC,UAAU,aACb,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAMA,UAAU,QACd,yBAAKA,UAAU,iBACb,2BAAOA,UAAU,QAAjB,UACA,kBAAC,IAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQF,UAAU,UAC3C,kBAAC,IAAD,CAAcC,KAAK,UAChB,SAACE,GAAD,OAAS,0BAAMH,UAAU,SAASG,OAGvC,yBAAKH,UAAU,iBACb,2BAAOA,UAAU,sBAAjB,kBACA,kBAAC,IAAD,CAAOC,KAAK,WAAWC,KAAK,WAAWF,UAAU,UACjD,kBAAC,IAAD,CAAcC,KAAK,aAChB,SAACE,GAAD,OAAS,0BAAMH,UAAU,SAASG,OAGvC,uBAAGC,KAAK,IAAIJ,UAAU,kBAAtB,mCAGA,4BAAQE,KAAK,SAASF,UAAU,OAAhC,kBACA,+DAC6B,uBAAGI,KAAK,aAAY,mDChChDC,UA3CO,SAAC,GAAiB,EAAfC,SAGvB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,sDACA,0BACEL,KAAK,cACLM,QAAQ,gEAOZ,kBAACC,EAAA,EAAD,CAAWC,UAAU,WAEnB,kBAACC,EAAA,EAAD,MACA,yBAAKV,UAAU,qCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD","file":"static/js/22.4b4a90d5.chunk.js","sourcesContent":["export const ACCESS_TOKEN = \"accessToken\"\nexport const REFRESH_TOKEN = \"refreshToken\"","//export const baseURL = 'http://localhost:3977/api';\nexport const baseURL = 'https://app-maximaderas.herokuapp.com/api';\nexport const headers = {\"mode\":\"no-cors\", \"headers\": {\"Access-Control-Allow-Origin\":\"*\"}}\n","import { baseURL, headers } from \"./config\";\nimport axios from \"axios\";\n\n// LOGIN API\nexport function loginAPI (data) {\n    const URL = `${baseURL}/login-user`;\n    return axios.post(URL, {data}, headers)\n    .then((response) => {\n        // console.log(response)\n        return response\n    })\n    .then((result) => {\n        // console.log(result)\n        return result\n    });\n}\n\n\n// REGISTER API\nexport function registerAPI (data) {\n    const URL = `${baseURL}/save-user`;\n    return axios.post(URL, {data}, headers)\n    .then((response) => {\n        // console.log(response)\n        return response\n    })\n    .then((result) => {\n        // console.log(result)\n        return result\n    });\n}","import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport '../../styles/login.css';\nimport {ACCESS_TOKEN, REFRESH_TOKEN} from '../../utils/constants'\nimport { loginAPI } from \"../../apis/auth\";\nimport Swal from 'sweetalert2'\n\n\nconst LogInSchema = Yup.object().shape({\n  email: Yup.string().email(\"Email inválido\").required(\"Email requerido\"),\n  password: Yup.string().required(\"Contraseña Requerida\"),\n});\n\nconst loginUser = async(values) =>{\n  const result = await loginAPI(values)\n  console.log(result)\n\n  if(result.data.status === 202){\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000,\n    })\n\n    Toast.fire({\n      icon: 'error',\n      title: 'El correo no existe'\n    })\n  }else if( result.data.status === 404){\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000,\n    })\n\n    Toast.fire({\n      icon: 'error',\n      title: 'Contraseña incorrecta'\n    })\n  }\n\n  if(result.message){\n    console.log('error')\n  }else{\n    const {accessToken, refreshToken} = result.data;\n    localStorage.setItem(ACCESS_TOKEN, accessToken)\n    localStorage.setItem(REFRESH_TOKEN, refreshToken)\n  }\n}\n\nconst Login = () => (\n  <div>\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validationSchema={LogInSchema}\n      onSubmit={(values) => {\n        console.log(values);\n        loginUser(values)\n      }}\n    >\n      {({ values, errors, touched }) => (\n        <div className=\"container\">\n          <div className=\"container-form\">\n            <Form className=\"form\">\n              <div className=\"row row-input\">\n                <label className=\"text\">Email:</label>\n                <Field name=\"email\" type=\"email\" className=\"input\" />\n                <ErrorMessage name=\"email\">\n                  {(msg) => <span className=\"error\">{msg}</span>}\n                </ErrorMessage>\n              </div>\n              <div className=\"row row-input\">\n                <label className=\"text-contraseña\">Contraseña:</label>\n                <Field name=\"password\" type=\"password\" className=\"input\" />\n                <ErrorMessage name=\"password\">\n                  {(msg) => <span className=\"error\">{msg}</span>}\n                </ErrorMessage>\n              </div>\n              <a href=\"/\" className=\"recordarContra\">\n                ¿Olvidaste tu contraseña?\n              </a>\n              <button type=\"submit\" className=\"btn\" >Iniciar sesion</button>\n              <p>\n                ¿Aún no tienes una cuenta? <a href=\"/register\"><b>REGISTRATE</b></a>\n              </p>\n            </Form>\n          </div>\n        </div>\n      )}\n    </Formik>\n  </div>\n);\n\nexport default Login;\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport Login from \"./FormikLogin\";\r\n\r\nconst LoginRegister = ({ location }) => {\r\n  // const { pathname } = location;\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Maximaderas | Login</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Compare page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n      {/* <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Inicio</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Login Register\r\n      </BreadcrumbsItem> */}\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n        <div className=\"login-register-area pt-100 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-7 col-md-12 ml-auto mr-auto\">\r\n                <div className=\"login-register-wrapper\">\r\n                  <div className=\"login-form-container\">\r\n                    <div className=\"login-register-form\">\r\n                      <Login/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLoginRegister.propTypes = {\r\n  location: PropTypes.object\r\n};\r\n\r\nexport default LoginRegister;\r\n"],"sourceRoot":""}